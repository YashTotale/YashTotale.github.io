{"version":3,"sources":["Components/Reusable/ModifiedA.tsx","Components/Reusable/Image.tsx","Components/Custom/ProfilePic.tsx","Components/Custom/AboutMe.tsx","Components/Custom/ContactForm.tsx","Pages/Home.tsx","Redux/thunks/display.thunks.ts","Components/Reusable/Overlay.tsx"],"names":["ModifiedA","props","target","rel","children","useStyles","makeStyles","theme","img","xl","lg","md","sm","xs","ratio","breakpoints","down","width","height","Math","round","outline","Image","alt","src","classes","className","imgDiv","margin","overflow","justifySelf","a","ProfilePic","tabIndex","href","PROFILE_PIC","PROFILE_PIC_RATIO","root","display","padding","position","backgroundImage","ABOUT_ME_BACKGROUND","backgroundOrigin","backgroundPositionY","backgroundSize","overlay","backgroundColor","top","bottom","left","right","transition","opacity","hovering","content","zIndex","flexFlow","justifyContent","alignItems","info","flexDirection","text","textAlign","textOverflow","color","heading","fontSize","p","useClickableStyles","clickable","type","border","borderRadius","cursor","textDecoration","Clickable","to","onClick","noSpaceAfter","useState","setHovering","renderChildren","React","cloneElement","onMouseOver","onMouseLeave","AboutMe","dispatch","useDispatch","Paper","Typography","variant","toggleDarkModeWMessage","palette","formContainer","minHeight","loading","flexGrow","contact","rate","marginTop","marginBottom","rating","submit","errors","submitDisabled","submitPaper","submitTitle","submitIcon","success","main","error","submitExplanation","submitInfo","submitAnother","useInputFieldStyles","input","InputField","name","register","rules","inputProps","textarea","notRequired","TextField","Boolean","helperText","message","label","capitalize","fullWidth","multiline","rows","rowsMax","inputRef","required","InputProps","ContactForm","useSelector","getContact","email","bugs","executeRecaptcha","useGoogleReCaptcha","useForm","mode","defaultValues","handleSubmit","control","reset","errorsBool","Object","keys","length","onSubmit","inputs","e","setContact","setContactLoading","token","preventDefault","Error","fetch","process","method","body","JSON","stringify","response","json","status","setContactSuccess","CircularProgress","pattern","value","EMAIL_REGEX","render","onChange","onBlur","Rating","parseInt","Button","undefined","CheckCircle","Cancel","map","i","key","home","up","projects","gap","gridTemplateColumns","HomePage","isSizeXL","useMediaQuery","only","sizes","DefaultOverlaySizes","Helmet","Projects","slice","project","url","getState","toggleDarkMode","getIsDarkMode","setSnackbarMessage","changeColorWMessage","scheme","cssColor","shade","getPrimaryShade","getSecondaryShade","changeColors","toColor","getMuiColor","changeShadeWMessage","changeShade","getPrimaryColor","getSecondaryColor","resetColors","schemes","forEach","defaultColors","defaultShades","resetMessage","mini","link","visibility","transform","common","white","fontWeight","maxHeight","overflowX","overflowY","caption","Mini","icons","useTheme","isSmall"],"mappings":"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","file":"static/js/13.5374dd97.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ModifiedA: React.FC<React.DetailedHTMLProps<\n  React.AnchorHTMLAttributes<HTMLAnchorElement>,\n  HTMLAnchorElement\n>> = (props) => (\n  <a {...props} target=\"_blank\" rel=\"noopener noreferrer\">\n    {props.children}\n  </a>\n);\n\nexport default ModifiedA;\n","// React Imports\nimport React from \"react\";\n\n// Material UI Imports\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {} from \"@material-ui/icons\";\nimport { BreakpointValues } from \"@material-ui/core/styles/createBreakpoints\";\n\ninterface StyleProps extends BreakpointValues {\n  ratio: number;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme) => ({\n  img: ({ xl, lg, md, sm, xs, ratio }) => ({\n    [theme.breakpoints.down(\"xl\")]: {\n      width: xl,\n      height: Math.round(xl * ratio),\n    },\n    [theme.breakpoints.down(\"lg\")]: {\n      width: lg,\n      height: Math.round(lg * ratio),\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      width: md,\n      height: Math.round(md * ratio),\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: sm,\n      height: Math.round(sm * ratio),\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: xs,\n      height: Math.round(xs * ratio),\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n  }),\n}));\n\ninterface ImageProps {\n  src: string;\n  alt: string;\n  ratio?: number;\n  xl?: number;\n  lg?: number;\n  md?: number;\n  sm?: number;\n  xs?: number;\n}\n\nconst Image: React.FC<ImageProps> = ({\n  ratio = 1,\n  alt,\n  src,\n  xs = 140,\n  sm = 160,\n  md = 180,\n  lg = 200,\n  xl = 220,\n}) => {\n  const classes = useStyles({\n    xs,\n    sm,\n    md,\n    lg,\n    xl,\n    ratio,\n  });\n\n  return <img className={classes.img} src={src} alt={alt}></img>;\n};\n\nexport default Image;\n","// React Imports\nimport React from \"react\";\nimport ModifiedA from \"../Reusable/ModifiedA\";\nimport Image from \"../Reusable/Image\";\nimport { PROFILE_PIC } from \"../../Utils/links\";\nimport { PROFILE_PIC_RATIO } from \"../../Utils/constants\";\n\n// Material UI Imports\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {} from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  imgDiv: {\n    margin: \"20px 10px\",\n    overflow: \"hidden\",\n    justifySelf: \"flex-start\",\n  },\n  a: {\n    \"&:focus\": {\n      outline: \"none\",\n    },\n  },\n}));\n\nconst ProfilePic: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.imgDiv}>\n      <ModifiedA className={classes.a} tabIndex={-1} href={PROFILE_PIC}>\n        <Image\n          ratio={PROFILE_PIC_RATIO}\n          src={PROFILE_PIC}\n          alt=\"Profile Picture\"\n        />\n      </ModifiedA>\n    </div>\n  );\n};\n\nexport default ProfilePic;\n","//React Imports\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProfilePic from \"./ProfilePic\";\nimport { ABOUT_ME_BACKGROUND } from \"../../Utils/links\";\n\n//Redux Imports\nimport { toggleDarkModeWMessage } from \"../../Redux/thunks\";\nimport { useDispatch } from \"react-redux\";\n\n//Material UI Imports\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Paper, Typography } from \"@material-ui/core\";\n\ninterface StyleProps {\n  hovering: boolean;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    padding: \"20px\",\n    margin: \"20px 0px\",\n    position: \"relative\",\n    //Background\n    backgroundImage: `url(${ABOUT_ME_BACKGROUND})`,\n    backgroundOrigin: \"border-box\",\n    backgroundPositionY: \"20%\",\n    backgroundSize: \"cover\",\n  },\n  overlay: ({ hovering }) => ({\n    backgroundColor: \"#1d1c1c\",\n    //position\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    //fade in/out\n    transition: \"opacity 0.4s\",\n    opacity: hovering ? 0.5 : 0.8,\n  }),\n  content: {\n    zIndex: 1,\n    width: \"100%\",\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  info: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"70%\",\n  },\n  text: {\n    textAlign: \"center\",\n    width: \"100%\",\n    margin: \"10px 0px\",\n    textOverflow: \"ellipsis\",\n    color: \"wheat\",\n  },\n  heading: {\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"1.8rem\",\n    },\n  },\n  p: {\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"1rem\",\n    },\n  },\n}));\n\nconst AboutMe: React.FC = () => {\n  const [hovering, setHovering] = useState(false);\n  const dispatch = useDispatch();\n\n  const classes = useStyles({ hovering });\n\n  return (\n    <Paper\n      onMouseOver={() => setHovering(true)}\n      onMouseLeave={() => setHovering(false)}\n      className={classes.root}\n    >\n      <div className={classes.overlay} />\n      <div className={classes.content}>\n        <ProfilePic />\n        <div className={classes.info}>\n          <Typography\n            className={`${classes.text} ${classes.heading}`}\n            variant=\"h4\"\n          >\n            Hi, I'm Yash\n          </Typography>\n          <Typography className={`${classes.text} ${classes.p}`} variant=\"h6\">\n            I am a high school Junior in the Bay Area with an interest in\n            Computer Science. Most of my Web Development and Programming\n            experience comes from creating personal projects and leading high\n            school clubs.\n          </Typography>\n          <Typography className={`${classes.text} ${classes.p}`} variant=\"h6\">\n            Other than coding, I like reading, running, and learning about other\n            topics, especially finance.\n          </Typography>\n          <Typography className={`${classes.text} ${classes.p}`} variant=\"h6\">\n            You can check out my\n            <Clickable noSpaceAfter type=\"link\" to=\"/projects\">\n              personal projects\n            </Clickable>\n            ,\n            <Clickable noSpaceAfter type=\"link\" to=\"/experience\">\n              work experience\n            </Clickable>\n            , and some cool features like changing this website's\n            <Clickable\n              type=\"btn\"\n              onClick={() => dispatch(toggleDarkModeWMessage())}\n            >\n              theme\n            </Clickable>\n            and\n            <Clickable noSpaceAfter type=\"link\" to=\"/colors\">\n              colors\n            </Clickable>\n            .\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\ninterface ClickableStyleProps {\n  hovering: boolean;\n  type: \"btn\" | \"link\";\n}\n\nconst useClickableStyles = makeStyles((theme: Theme) => ({\n  clickable: ({ hovering, type }: ClickableStyleProps) => ({\n    //Border\n    border: type === \"btn\" ? \"2px solid wheat\" : \"none\",\n    borderRadius: type === \"btn\" ? \"4px\" : \"initial\",\n    //User interaction\n    cursor: \"pointer\",\n    //Misc\n    padding: \"2px\",\n    textDecoration: type === \"btn\" ? \"none\" : \"underline\",\n    //Colors\n    transition: \"background-color 0.2s\",\n    color: \"inherit\",\n    backgroundColor: hovering\n      ? \"rgb(245,222,179, 0.4)\"\n      : \"rgb(245,222,179, 0.2)\",\n  }),\n}));\n\ninterface ClickableProps {\n  type: \"btn\" | \"link\";\n  to?: string;\n  onClick?: (e: any) => any;\n  noSpaceAfter?: boolean;\n}\n\nconst Clickable: React.FC<ClickableProps> = ({\n  children,\n  type,\n  to,\n  onClick,\n  noSpaceAfter,\n}) => {\n  const [hovering, setHovering] = useState<boolean>(false);\n  const classes = useClickableStyles({ type, hovering });\n  const renderChildren =\n    type === \"link\" ? (\n      <Link to={to ? to : \"#/\"}>{children}</Link>\n    ) : (\n      <span>{children}</span>\n    );\n\n  return (\n    <>\n      &nbsp;\n      {React.cloneElement(renderChildren, {\n        className: classes.clickable,\n        onMouseOver: () => setHovering(true),\n        onMouseLeave: () => setHovering(false),\n        onClick: onClick,\n        tabIndex: 0,\n      })}\n      {noSpaceAfter ? null : \"\\u00A0\"}\n    </>\n  );\n};\n\nexport default AboutMe;\n","// React Imports\nimport React from \"react\";\nimport {\n  SubmitHandler,\n  useForm,\n  DeepMap,\n  FieldError,\n  ValidationRules,\n  Controller,\n} from \"react-hook-form\";\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\nimport { EMAIL_REGEX } from \"../../Utils/constants\";\n\n// Redux Imports\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContact } from \"../../Redux/selectors\";\nimport {\n  setContact,\n  setContactLoading,\n  setContactSuccess,\n} from \"../../Redux/actions\";\n\n// Material UI Imports\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  capitalize,\n  CircularProgress,\n  InputProps,\n  Paper,\n  TextField,\n  TextFieldProps,\n  Typography,\n} from \"@material-ui/core\";\nimport { CheckCircle, Cancel } from \"@material-ui/icons\";\nimport { Rating } from \"@material-ui/lab\";\n\ninterface StyleProps {\n  errors: boolean;\n  success: boolean | null;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>(({ palette }) => ({\n  formContainer: {\n    minHeight: 459,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"stretch\",\n    alignItems: \"stretch\",\n  },\n  loading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexGrow: 1,\n  },\n  contact: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  rate: {\n    marginTop: 10,\n    marginBottom: 3,\n  },\n  rating: {\n    marginBottom: 10,\n  },\n  submit: ({ errors }) => ({\n    margin: \"10px 0px\",\n    cursor: errors ? \"not-allowed\" : \"pointer\",\n  }),\n  submitDisabled: {\n    cursor: \"not-allowed\",\n  },\n  submitPaper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 10,\n  },\n  submitTitle: {\n    textAlign: \"center\",\n  },\n  submitIcon: ({ success }) => ({\n    margin: \"20px 0px\",\n    width: 100,\n    height: 100,\n    color: success ? palette.success.main : palette.error.main,\n  }),\n  submitExplanation: {\n    marginBottom: 10,\n    textAlign: \"center\",\n  },\n  submitInfo: {\n    margin: \"10px 0px\",\n  },\n  submitAnother: {\n    marginTop: 10,\n  },\n}));\n\ninterface ContactFormProps {}\n\nexport interface Inputs {\n  name: string;\n  message: string;\n  email: string;\n  bugs: string;\n  rating: number | null;\n}\n\nconst ContactForm: React.FC<ContactFormProps> = () => {\n  const dispatch = useDispatch();\n\n  const inputs: (keyof Inputs)[] = [\n    \"name\",\n    \"message\",\n    \"email\",\n    \"bugs\",\n    \"rating\",\n  ];\n\n  const contact = useSelector(getContact);\n\n  const { name, email, message, bugs, rating, loading, success } = contact;\n\n  const { executeRecaptcha } = useGoogleReCaptcha();\n\n  const { register, handleSubmit, errors, control, reset } = useForm<Inputs>({\n    mode: \"onTouched\",\n    defaultValues: {\n      name,\n      email,\n      message,\n      bugs,\n      rating,\n    },\n  });\n\n  const errorsBool = Boolean(Object.keys(errors).length);\n\n  const classes = useStyles({\n    errors: errorsBool,\n    success,\n  });\n\n  const onSubmit: SubmitHandler<Inputs> = async (inputs, e) => {\n    dispatch(setContact(inputs));\n    dispatch(setContactLoading(true));\n    try {\n      const token = await executeRecaptcha?.(\"contact_form\");\n      e?.preventDefault();\n      if (!token) {\n        throw new Error(\"ReCaptcha was unable to authorize this response.\");\n      } else {\n        const response = await fetch(\n          process.env.REACT_APP_CONTACT_FORM_ZAPIER_URL as string,\n          {\n            method: \"post\",\n            body: JSON.stringify(inputs),\n          }\n        );\n        const json = await response.json();\n        if (json.status === \"success\") {\n          dispatch(setContactSuccess(true));\n        }\n      }\n    } catch (err) {\n      dispatch(setContactSuccess(false));\n    } finally {\n      dispatch(setContactLoading(false));\n    }\n  };\n\n  return (\n    <div className={classes.formContainer}>\n      {loading ? (\n        <div className={classes.loading}>\n          <CircularProgress />\n        </div>\n      ) : success === null ? (\n        <form className={classes.contact} onSubmit={handleSubmit(onSubmit)}>\n          <InputField errors={errors} name=\"name\" register={register} />\n          <InputField\n            errors={errors}\n            name=\"message\"\n            register={register}\n            textarea\n          />\n          <InputField\n            errors={errors}\n            name=\"email\"\n            register={register}\n            rules={{\n              pattern: {\n                value: EMAIL_REGEX,\n                message: \"Please enter a valid email address\",\n              },\n            }}\n          />\n          <InputField\n            errors={errors}\n            name=\"bugs\"\n            register={register}\n            props={{\n              label: \"Any Bugs?\",\n            }}\n            textarea\n            notRequired\n          />\n          <Typography className={classes.rate} variant=\"body1\">\n            Rate the site?\n          </Typography>\n          <Controller\n            name=\"rating\"\n            control={control}\n            render={({ onChange, onBlur, value }) => (\n              <Rating\n                name=\"rating\"\n                value={parseInt(value)}\n                onChange={onChange}\n                onBlur={onBlur}\n              />\n            )}\n            className={classes.rating}\n          ></Controller>\n          <Button\n            className={classes.submit}\n            color=\"primary\"\n            variant=\"outlined\"\n            type={errorsBool ? undefined : \"submit\"}\n          >\n            Submit\n          </Button>\n        </form>\n      ) : (\n        <Paper className={classes.submitPaper}>\n          <Typography className={classes.submitTitle} variant=\"h4\">\n            {success ? \"Form submission successful\" : \"Form submission failed\"}\n          </Typography>\n          {success ? (\n            <CheckCircle className={classes.submitIcon} />\n          ) : (\n            <Cancel className={classes.submitIcon} />\n          )}\n          <Typography variant=\"body1\" className={classes.submitExplanation}>\n            {success\n              ? \"Thanks for your response! I'll try to get back to you within a few days. \"\n              : \"An error occurred while submitting your response. Please try again. \"}\n            Here is what was submitted:\n          </Typography>\n          {inputs.map((input, i) => {\n            return (\n              contact[input] && (\n                <Typography\n                  key={i}\n                  className={classes.submitInfo}\n                  variant=\"body1\"\n                >\n                  <strong>{capitalize(input)}: </strong>\n                  {contact[input]}\n                </Typography>\n              )\n            );\n          })}\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => {\n              reset(contact);\n              dispatch(setContactSuccess(null));\n            }}\n            className={classes.submitAnother}\n          >\n            {success ? \"Submit another response\" : \"Try again\"}\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n};\n\nconst useInputFieldStyles = makeStyles((theme) => ({\n  input: {\n    margin: \"10px 0px\",\n  },\n}));\n\ninterface InputFieldProps {\n  name: keyof Inputs;\n  register: (rules?: Partial<ValidationRules>) => (ref: any) => void;\n  errors: DeepMap<Inputs, FieldError>;\n  props?: TextFieldProps;\n  inputProps?: InputProps;\n  rules?: Partial<ValidationRules>;\n  textarea?: boolean;\n  notRequired?: boolean;\n}\n\nconst InputField: React.FC<InputFieldProps> = ({\n  name,\n  errors,\n  register,\n  props,\n  rules,\n  inputProps,\n  textarea,\n  notRequired,\n}) => {\n  const classes = useInputFieldStyles();\n\n  return (\n    <TextField\n      error={Boolean(errors[name])}\n      helperText={errors[name]?.message}\n      className={classes.input}\n      variant=\"outlined\"\n      label={`${capitalize(name)}${notRequired ? \"\" : \"*\"}`}\n      fullWidth\n      name={name}\n      {...(textarea\n        ? {\n            multiline: true,\n            rows: 2,\n            rowsMax: 20,\n          }\n        : null)}\n      inputRef={register({\n        required: notRequired ? false : \"This field is required\",\n        ...rules,\n      })}\n      InputProps={{ ...inputProps }}\n      {...props}\n    />\n  );\n};\n\nexport default ContactForm;\n","//React Imports\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport AboutMe from \"../Components/Custom/AboutMe\";\nimport ContactForm from \"../Components/Custom/ContactForm\";\nimport ProjectOverlay, {\n  DefaultOverlaySizes,\n} from \"../Components/Reusable/Overlay\";\nimport Projects from \"../Data/Projects.json\";\n\n//Material UI Imports\nimport {\n  makeStyles,\n  Theme,\n  Typography,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { BreakpointValues } from \"@material-ui/core/styles/createBreakpoints\";\n\ninterface StyleProps extends BreakpointValues {}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme) => ({\n  home: {\n    margin: \"0px 20px\",\n    [theme.breakpoints.up(\"lg\")]: {\n      width: \"80%\",\n    },\n  },\n  projects: ({ xl, lg, md, sm, xs }) => ({\n    margin: \"15px 0px\",\n    display: \"grid\",\n    gap: \"30px\",\n    [theme.breakpoints.down(\"xl\")]: {\n      gridTemplateColumns: `repeat(auto-fit, minmax(${xl}px, 1fr))`,\n    },\n    [theme.breakpoints.down(\"lg\")]: {\n      gridTemplateColumns: `repeat(auto-fit, minmax(${lg}px, 1fr))`,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      gridTemplateColumns: `repeat(auto-fit, minmax(${md}px, 1fr))`,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      gridTemplateColumns: `repeat(auto-fit, minmax(${sm}px, 1fr))`,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      gridTemplateColumns: `repeat(auto-fit, minmax(${xs}px, 1fr))`,\n    },\n  }),\n}));\n\nconst HomePage: React.FC = () => {\n  const isSizeXL = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.only(\"xl\")\n  );\n\n  const sizes = { ...DefaultOverlaySizes, sm: 170 };\n\n  const classes = useStyles({ ...sizes });\n\n  return (\n    <>\n      <Helmet>\n        <title>Home - Yash Totale</title>\n      </Helmet>\n      <div className={classes.home}>\n        <AboutMe />\n        <div>\n          <Typography variant=\"h4\">Projects</Typography>\n          <hr />\n          <div className={classes.projects}>\n            {Projects.slice(0, isSizeXL ? 8 : 6).map((project, i) => {\n              return (\n                <ProjectOverlay\n                  {...project}\n                  url={`/projects/${project.url}`}\n                  key={i}\n                  {...sizes}\n                />\n              );\n            })}\n          </div>\n          <Typography variant=\"h4\">Contact</Typography>\n          <hr />\n          <ContactForm />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n","//React Imports\nimport { Dispatch } from \"react\";\nimport {\n  scheme,\n  shade,\n  defaultColors,\n  defaultShades,\n  schemes,\n  resetMessage,\n  cssColor,\n  getMuiColor,\n  toColor,\n} from \"../../Utils/colors\";\n\n//Redux Imports\nimport { RootStateOrAny } from \"react-redux\";\nimport {\n  changeShade,\n  setSnackbarMessage,\n  toggleDarkMode,\n  changeColors,\n} from \"../actions\";\nimport {\n  getIsDarkMode,\n  getPrimaryColor,\n  getPrimaryShade,\n  getSecondaryColor,\n  getSecondaryShade,\n} from \"../selectors\";\n\n//Material UI Imports\nimport { capitalize } from \"@material-ui/core\";\n\nexport const toggleDarkModeWMessage = () => (\n  dispatch: Dispatch<any>,\n  getState: () => RootStateOrAny\n) => {\n  dispatch(toggleDarkMode());\n  const theme = getIsDarkMode(getState()) ? \"Dark\" : \"Light\";\n  dispatch(setSnackbarMessage(`${theme} Theme set`, \"success\", null));\n};\n\nexport const changeColorWMessage = (scheme: scheme, cssColor: cssColor) => (\n  dispatch: Dispatch<any>,\n  getState: () => RootStateOrAny\n) => {\n  const shade =\n    scheme === \"primary\"\n      ? getPrimaryShade(getState())\n      : getSecondaryShade(getState());\n  dispatch(changeColors(scheme, cssColor));\n  dispatch(\n    setSnackbarMessage(\n      `${capitalize(scheme)} Color is now ${toColor(cssColor)}`,\n      \"success\",\n      getMuiColor(cssColor, shade)\n    )\n  );\n};\n\nexport const changeShadeWMessage = (scheme: scheme, shade: shade) => (\n  dispatch: Dispatch<any>,\n  getState: () => RootStateOrAny\n) => {\n  dispatch(changeShade(scheme, shade));\n  const cssColor =\n    scheme === \"primary\"\n      ? getPrimaryColor(getState())\n      : getSecondaryColor(getState());\n  dispatch(\n    setSnackbarMessage(\n      `${capitalize(scheme)} Shade is now ${shade}`,\n      \"success\",\n      getMuiColor(cssColor, shade)\n    )\n  );\n};\n\nexport const resetColors = () => (\n  dispatch: Dispatch<any>,\n  getState: () => RootStateOrAny\n) => {\n  schemes.forEach((scheme) => {\n    dispatch(changeColors(scheme, defaultColors[scheme]));\n    dispatch(changeShade(scheme, defaultShades[scheme]));\n    dispatch(setSnackbarMessage(resetMessage, \"success\", null));\n  });\n};\n","//React Imports\nimport React, { useState } from \"react\";\n\n//Material UI Imports\nimport {\n  makeStyles,\n  Theme,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { BreakpointValues } from \"@material-ui/core/styles/createBreakpoints\";\n\ninterface StyleProps extends BreakpointValues {\n  hovering: boolean;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme) => ({\n  mini: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifySelf: \"center\",\n  },\n  link: ({ xl, lg, md, sm, xs }) => ({\n    position: \"relative\",\n    [theme.breakpoints.down(\"xl\")]: {\n      width: xl,\n      height: xl,\n    },\n    [theme.breakpoints.down(\"lg\")]: {\n      width: lg,\n      height: lg,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      width: md,\n      height: md,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: sm,\n      height: sm,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: xs,\n      height: xs,\n    },\n  }),\n  overlay: ({ hovering }) => ({\n    position: \"absolute\",\n    borderRadius: 5,\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    backgroundColor: \"#1d1c1c\",\n    visibility: hovering ? \"visible\" : \"hidden\",\n    opacity: hovering ? 0.7 : 0,\n    transition: \"visibility 0.4s, opacity 0.4s\",\n  }),\n  name: ({ hovering }) => ({\n    //Positioning\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    //Display\n    textAlign: \"center\",\n    color: theme.palette.common.white,\n    fontWeight: 900,\n    width: \"calc(100% - 20px)\",\n    maxHeight: \"calc(100% - 20px)\",\n    textOverflow: \"ellipsis\",\n    overflowX: \"hidden\",\n    overflowY: \"scroll\",\n    //Transition\n    visibility: hovering ? \"visible\" : \"hidden\",\n    opacity: hovering ? 1 : 0,\n    transition: \"visibility 0.4s, opacity 0.4s\",\n  }),\n  img: {\n    padding: 5,\n    border: `4px solid ${\n      theme.palette.common[theme.palette.type === \"dark\" ? \"white\" : \"black\"]\n    }`,\n    borderRadius: \"5px\",\n    width: \"inherit\",\n    height: \"inherit\",\n  },\n  caption: ({ xl, lg, md, sm, xs }) => ({\n    textAlign: \"center\",\n    marginTop: 5,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    [theme.breakpoints.down(\"xl\")]: {\n      width: xl,\n    },\n    [theme.breakpoints.down(\"lg\")]: {\n      width: lg,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      width: md,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: sm,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: xs,\n    },\n  }),\n}));\n\nexport const DefaultOverlaySizes = {\n  xl: 250,\n  lg: 200,\n  md: 180,\n  sm: 160,\n  xs: 150,\n};\n\ninterface MiniProps {\n  name: string;\n  icons: string[];\n  url: string;\n  xl?: number;\n  lg?: number;\n  md?: number;\n  sm?: number;\n  xs?: number;\n}\n\nconst Mini: React.FC<MiniProps> = ({\n  name,\n  icons,\n  url,\n  xl = 250,\n  lg = 200,\n  md = 180,\n  sm = 160,\n  xs = 150,\n}) => {\n  const [hovering, setHovering] = useState<boolean>(false);\n  const theme = useTheme();\n  const isSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const classes = useStyles({ hovering, xl, lg, md, sm, xs });\n  return (\n    <div\n      onMouseOver={() => setHovering(true)}\n      onMouseLeave={() => setHovering(false)}\n      className={classes.mini}\n    >\n      <Link className={classes.link} to={url}>\n        <div className={classes.overlay}></div>\n        <Typography className={classes.name} variant=\"h4\">\n          {name}\n        </Typography>\n        <img\n          className={classes.img}\n          src={theme.palette.type === \"light\" ? icons[0] : icons[1]}\n          alt={name}\n        ></img>\n      </Link>\n      {isSmall && (\n        <Typography className={classes.caption} variant=\"h5\">\n          {name}\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default Mini;\n"],"sourceRoot":""}