{"version":3,"sources":["Components/Reusable/Tag/Page.tsx","Pages/Tags.tsx","../node_modules/@material-ui/core/esm/utils/capitalize.js","../node_modules/@material-ui/core/esm/Paper/Paper.js","Components/Reusable/Overlay.tsx","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"names":["useStyles","makeStyles","theme","tagPage","display","flexDirection","justifyContent","alignItems","jumbotron","Page","name","icons","classes","isDarkMode","useTheme","palette","type","Helmet","className","Paper","src","alt","tags","xl","lg","md","sm","xs","width","gap","margin","breakpoints","down","gridTemplateColumns","TagsPage","sizes","DefaultOverlaySizes","id","useParams","tagURLs","React","useMemo","Tags","map","url","includes","find","tag","i","key","capitalize","string","Error","_formatMuiErrorMessage","charAt","toUpperCase","slice","props","ref","_props$component","component","Component","_props$square","square","_props$elevation","elevation","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","outlined","concat","rounded","withStyles","elevations","shadows","forEach","shadow","index","boxShadow","backgroundColor","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","mini","justifySelf","link","position","height","overlay","hovering","top","right","left","bottom","visibility","opacity","transform","textAlign","common","white","fontWeight","maxHeight","textOverflow","overflowX","overflowY","img","padding","caption","marginTop","overflow","Mini","useState","setHovering","isSmall","useMediaQuery","onMouseOver","onMouseLeave","to","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","typography","button","overline","srOnly","alignLeft","alignCenter","alignRight","alignJustify","whiteSpace","marginBottom","colorInherit","colorPrimary","main","colorSecondary","secondary","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock"],"mappings":"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","file":"static/js/12.d42f51fc.chunk.js","sourcesContent":["// React Imports\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { TagProps } from \"../../../Utils/interfaces\";\n\n// Redux Imports\n\n// Material UI Imports\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Paper } from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  tagPage: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  jumbotron: {\n    display: \"flex\",\n  },\n}));\n\nconst Page: React.FC<TagProps> = ({ name, icons }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isDarkMode = theme.palette.type === \"dark\";\n  return (\n    <>\n      <Helmet>\n        <title>{name} - Yash Totale</title>\n      </Helmet>\n      <div className={classes.tagPage}>\n        <Paper className={classes.jumbotron}>\n          <img src={icons[isDarkMode ? 1 : 0]} alt={name}></img>\n        </Paper>\n      </div>\n    </>\n  );\n};\n\nexport default Page;\n","//React Imports\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Tags from \"../Data/Tags.json\";\nimport TagOverlay, {\n  DefaultOverlaySizes,\n} from \"../Components/Reusable/Overlay\";\nimport TagPage from \"../Components/Reusable/Tag/Page\";\n\nimport { useParams } from \"react-router-dom\";\n\n//Material UI Imports\nimport { makeStyles, Theme } from \"@material-ui/core\";\nimport { TagProps } from \"../Utils/interfaces\";\nimport { BreakpointValues } from \"@material-ui/core/styles/createBreakpoints\";\n\ninterface StyleProps extends BreakpointValues {}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme) => ({\n  tags: ({ xl, lg, md, sm, xs }) => ({\n    width: \"100%\",\n    display: \"grid\",\n    gap: \"25px\",\n    margin: \"15px 10px 0px\",\n    [theme.breakpoints.down(\"xl\")]: {\n      gridTemplateColumns: `repeat(auto-fit, minmax(${xl}px, 1fr))`,\n    },\n    [theme.breakpoints.down(\"lg\")]: {\n      gridTemplateColumns: `repeat(auto-fit, minmax(${lg}px, 1fr))`,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      gridTemplateColumns: `repeat(auto-fit, minmax(${md}px, 1fr))`,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      gridTemplateColumns: `repeat(auto-fit, minmax(${sm}px, 1fr))`,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      gridTemplateColumns: `repeat(auto-fit, minmax(${xs}px, 1fr))`,\n    },\n  }),\n}));\n\ninterface Params {\n  id: string;\n}\n\nconst TagsPage: React.FC = () => {\n  const sizes = { ...DefaultOverlaySizes };\n\n  const classes = useStyles({ ...sizes });\n  const { id } = useParams<Params>();\n  const tagURLs = React.useMemo(() => Tags.map(({ url }) => url), []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Tags - Yash Totale</title>\n      </Helmet>\n      {tagURLs.includes(id) ? (\n        <TagPage {...(Tags.find((tag) => tag.url === id) as TagProps)} />\n      ) : (\n        <div className={classes.tags}>\n          {Tags.map(({ url, name, icons }, i) => {\n            return (\n              <TagOverlay\n                key={i}\n                name={name}\n                icons={icons}\n                url={`/tags/${url}`}\n                {...sizes}\n              />\n            );\n          })}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default TagsPage;\n","import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: capitalize(string) expects a string argument.\" : _formatMuiErrorMessage(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","//React Imports\nimport React, { useState } from \"react\";\n\n//Material UI Imports\nimport {\n  makeStyles,\n  Theme,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { BreakpointValues } from \"@material-ui/core/styles/createBreakpoints\";\n\ninterface StyleProps extends BreakpointValues {\n  hovering: boolean;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme) => ({\n  mini: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifySelf: \"center\",\n  },\n  link: ({ xl, lg, md, sm, xs }) => ({\n    position: \"relative\",\n    [theme.breakpoints.down(\"xl\")]: {\n      width: xl,\n      height: xl,\n    },\n    [theme.breakpoints.down(\"lg\")]: {\n      width: lg,\n      height: lg,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      width: md,\n      height: md,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: sm,\n      height: sm,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: xs,\n      height: xs,\n    },\n  }),\n  overlay: ({ hovering }) => ({\n    position: \"absolute\",\n    borderRadius: 5,\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    backgroundColor: \"#1d1c1c\",\n    visibility: hovering ? \"visible\" : \"hidden\",\n    opacity: hovering ? 0.7 : 0,\n    transition: \"visibility 0.4s, opacity 0.4s\",\n  }),\n  name: ({ hovering }) => ({\n    //Positioning\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    //Display\n    textAlign: \"center\",\n    color: theme.palette.common.white,\n    fontWeight: 900,\n    width: \"calc(100% - 20px)\",\n    maxHeight: \"calc(100% - 20px)\",\n    textOverflow: \"ellipsis\",\n    overflowX: \"hidden\",\n    overflowY: \"scroll\",\n    //Transition\n    visibility: hovering ? \"visible\" : \"hidden\",\n    opacity: hovering ? 1 : 0,\n    transition: \"visibility 0.4s, opacity 0.4s\",\n  }),\n  img: {\n    padding: 5,\n    border: `4px solid ${\n      theme.palette.common[theme.palette.type === \"dark\" ? \"white\" : \"black\"]\n    }`,\n    borderRadius: \"5px\",\n    width: \"inherit\",\n    height: \"inherit\",\n  },\n  caption: ({ xl, lg, md, sm, xs }) => ({\n    textAlign: \"center\",\n    marginTop: 5,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    [theme.breakpoints.down(\"xl\")]: {\n      width: xl,\n    },\n    [theme.breakpoints.down(\"lg\")]: {\n      width: lg,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      width: md,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: sm,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: xs,\n    },\n  }),\n}));\n\nexport const DefaultOverlaySizes = {\n  xl: 250,\n  lg: 200,\n  md: 180,\n  sm: 160,\n  xs: 150,\n};\n\ninterface MiniProps {\n  name: string;\n  icons: string[];\n  url: string;\n  xl?: number;\n  lg?: number;\n  md?: number;\n  sm?: number;\n  xs?: number;\n}\n\nconst Mini: React.FC<MiniProps> = ({\n  name,\n  icons,\n  url,\n  xl = 250,\n  lg = 200,\n  md = 180,\n  sm = 160,\n  xs = 150,\n}) => {\n  const [hovering, setHovering] = useState<boolean>(false);\n  const theme = useTheme();\n  const isSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const classes = useStyles({ hovering, xl, lg, md, sm, xs });\n  return (\n    <div\n      onMouseOver={() => setHovering(true)}\n      onMouseLeave={() => setHovering(false)}\n      className={classes.mini}\n    >\n      <Link className={classes.link} to={url}>\n        <div className={classes.overlay}></div>\n        <Typography className={classes.name} variant=\"h4\">\n          {name}\n        </Typography>\n        <img\n          className={classes.img}\n          src={theme.palette.type === \"light\" ? icons[0] : icons[1]}\n          alt={name}\n        ></img>\n      </Link>\n      {isSmall && (\n        <Typography className={classes.caption} variant=\"h5\">\n          {name}\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default Mini;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"sourceRoot":""}