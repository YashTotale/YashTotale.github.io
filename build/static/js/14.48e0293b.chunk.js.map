{"version":3,"sources":["Components/Reusable/Tag/Mini.tsx","Components/Reusable/StyledLink.tsx","Components/Reusable/Parser.tsx","Components/Reusable/Project/Display.tsx","Components/Reusable/Project/Page.tsx","Pages/Projects.tsx","Components/Reusable/ActionButton.tsx","Components/Reusable/TooltipBtn.tsx"],"names":["useStyles","makeStyles","theme","tag","margin","backgroundColor","Mini","name","url","icons","useTheme","classes","Chip","clickable","size","label","className","avatar","Avatar","src","palette","type","undefined","component","Link","to","color","variant","StyledLink","children","RouterLink","Parser","original","useMemo","regexes","match","Tags","map","RegExp","parsed","matchArrays","forEach","regex","matchArray","exec","push","sort","a","b","index","lastIndex","element","substring","length","p","i","React","cloneElement","key","projectDiv","position","maxWidth","display","flexDirection","alignItems","justifyContent","projectImgDiv","width","padding","borderBottomLeftRadius","borderBottomRightRadius","projectImg","breakpoints","only","height","projectTitle","textAlign","marginTop","projectUrl","projectSourceCode","top","right","projectLink","projectInfo","borderTopLeftRadius","borderTopRightRadius","projectDescription","projectDivider","projectTags","alignSelf","projectTime","Display","description","tags","sourcecode","start","end","link","isSizeSmall","useMediaQuery","Paper","elevation","alt","Typography","TooltipBtn","title","icon","GitHub","href","Launch","desc","Divider","find","Page","Helmet","root","col","ProjectsPage","id","useParams","projectURLs","Projects","project","down","half","Math","ceil","col1","slice","col2","includes","Array","x","props","ActionButton","onClick","IconButton","target","rel","tooltipComponent","Tooltip"],"mappings":"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","file":"static/js/14.48e0293b.chunk.js","sourcesContent":["//React Imports\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TagProps } from \"../../../Utils/interfaces\";\n\n//Material UI Imports\nimport { Avatar, Chip, makeStyles, useTheme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  tag: {\n    margin: 2,\n    \"& .MuiChip-avatarColorSecondary\": {\n      backgroundColor: \"inherit\",\n    },\n  },\n}));\n\nconst Mini: React.FC<TagProps> = ({ name, url, icons }) => {\n  const theme = useTheme();\n  const classes = useStyles();\n  return (\n    <Chip\n      clickable\n      size=\"medium\"\n      label={name}\n      className={classes.tag}\n      avatar={\n        icons ? (\n          <Avatar src={icons[theme.palette.type === \"light\" ? 0 : 1]}></Avatar>\n        ) : undefined\n      }\n      component={Link}\n      to={`/tags/${url}`}\n      color=\"secondary\"\n      variant=\"outlined\"\n    />\n  );\n};\n\nexport default Mini;\n","// React Imports\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\n// Material UI Imports\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport { Link as MuiLink } from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\n\n// const useStyles = makeStyles((theme) => ({}));\n\ninterface StyledLinkProps {\n  to: string;\n  className?: string;\n  color?:\n    | \"initial\"\n    | \"inherit\"\n    | \"primary\"\n    | \"secondary\"\n    | \"textPrimary\"\n    | \"textSecondary\"\n    | \"error\";\n}\n\nconst StyledLink: React.FC<StyledLinkProps> = ({\n  to,\n  children,\n  color,\n  className,\n}) => {\n  // const classes = useStyles();\n  return (\n    <MuiLink className={className} color={color} to={to} component={RouterLink}>\n      {children}\n    </MuiLink>\n  );\n};\n\nexport default StyledLink;\n","// React Imports\nimport React, { ReactElement, useMemo } from \"react\";\nimport Tags from \"../../Data/Tags.json\";\nimport StyledLink from \"./StyledLink\";\n\n// Material UI Imports\ninterface ParserProps {\n  original: string;\n}\n\nconst Parser: React.FC<ParserProps> = ({ original }) => {\n  return useMemo(() => {\n    type Regex = [RegExp, (match: string) => ReactElement<any, any>];\n\n    const regexes: Regex[] = [\n      [/\\*\\*(.*?)\\*\\*/gi, (match: string) => <strong>{match}</strong>],\n      ...Tags.map(\n        (tag): Regex => [\n          new RegExp(`(?<![a-zA-Z])(${tag.name})(?![a-zA-Z])`, \"gi\"),\n          (match: string) => (\n            <StyledLink color=\"primary\" to={`/tags/${tag.url}`}>\n              {match}\n            </StyledLink>\n          ),\n        ]\n      ),\n    ];\n\n    const parsed: ReactElement<any, any>[] = [];\n\n    const matchArrays: [RegExpExecArray, ReactElement<any, any>][] = [];\n\n    regexes.forEach((regex) => {\n      let matchArray;\n      while ((matchArray = regex[0].exec(original)) !== null) {\n        matchArrays.push([matchArray, regex[1](matchArray[1])]);\n      }\n    });\n\n    matchArrays.sort((a, b) => {\n      return a[0].index - b[0].index;\n    });\n\n    let lastIndex = 0;\n\n    matchArrays.forEach(([matchArray, element]) => {\n      parsed.push(<>{original.substring(lastIndex, matchArray.index)}</>);\n      parsed.push(element);\n      lastIndex = matchArray.index + matchArray[0].length;\n    });\n\n    parsed.push(<>{original.substring(lastIndex)}</>);\n\n    return <>{parsed.map((p, i) => React.cloneElement(p, { key: i }))}</>;\n  }, [original]);\n};\n\nexport default Parser;\n","//React Imports\nimport React from \"react\";\nimport TooltipBtn from \"../TooltipBtn\";\nimport MiniTag from \"../Tag/Mini\";\nimport Parser from \"../Parser\";\nimport StyledLink from \"../StyledLink\";\nimport Tags from \"../../../Data/Tags.json\";\nimport { ProjectProps, TagProps } from \"../../../Utils/interfaces\";\n\n//Material UI Imports\nimport {\n  makeStyles,\n  Paper,\n  Typography,\n  useTheme,\n  Divider,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { GitHub, Launch } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  projectDiv: {\n    margin: 15,\n    position: \"relative\",\n    maxWidth: \"500px\",\n    // Flex\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  projectImgDiv: {\n    width: \"100%\",\n    padding: \"10px 24px\",\n    // Flex\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    // Border Radius\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n  projectImg: {\n    [theme.breakpoints.only(\"xs\")]: {\n      width: 150,\n      height: 150,\n    },\n    width: 200,\n    height: 200,\n  },\n  projectTitle: {\n    textAlign: \"center\",\n    marginTop: 5,\n  },\n  projectUrl: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  projectSourceCode: {\n    position: \"absolute\",\n    top: 2,\n    right: 2,\n  },\n  projectLink: {\n    position: \"absolute\",\n    top: 52,\n    right: 2,\n  },\n  projectInfo: {\n    width: \"100%\",\n    padding: \"10px 10px 3px\",\n    // Flex\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    // Border Radius\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n  },\n  projectDescription: {\n    margin: 4,\n  },\n  projectDivider: {\n    marginTop: 9,\n  },\n  projectTags: {\n    marginTop: 8,\n    alignSelf: \"center\",\n  },\n  projectTime: {\n    alignSelf: \"center\",\n    marginTop: 4,\n  },\n}));\n\nconst Display: React.FC<ProjectProps> = ({\n  name,\n  icons,\n  description,\n  tags,\n  sourcecode,\n  start,\n  end,\n  link,\n  url,\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isSizeSmall = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  return (\n    <div className={classes.projectDiv}>\n      <Paper elevation={24} className={classes.projectImgDiv}>\n        <StyledLink\n          className={classes.projectUrl}\n          to={`/projects/${url}`}\n          color=\"primary\"\n        >\n          <img\n            className={classes.projectImg}\n            src={theme.palette.type === \"light\" ? icons[0] : icons[1]}\n            alt={name}\n          ></img>\n          <Typography\n            className={classes.projectTitle}\n            variant={isSizeSmall ? \"h5\" : \"h4\"}\n          >\n            {name}\n          </Typography>\n        </StyledLink>\n        {sourcecode && (\n          <TooltipBtn\n            className={classes.projectSourceCode}\n            title={`Source Code for ${name}`}\n            icon={<GitHub />}\n            component=\"a\"\n            href={sourcecode}\n          />\n        )}\n        {link && (\n          <TooltipBtn\n            className={classes.projectLink}\n            title={`View ${name}`}\n            icon={<Launch />}\n            component=\"a\"\n            href={link}\n          />\n        )}\n      </Paper>\n      <Paper elevation={10} className={classes.projectInfo}>\n        {description.map((desc, i) => (\n          <Typography\n            key={i}\n            className={classes.projectDescription}\n            variant={isSizeSmall ? \"body2\" : \"body1\"}\n          >\n            <Parser original={desc} />\n          </Typography>\n        ))}\n        <Divider className={classes.projectDivider} />\n        <div className={classes.projectTags}>\n          {tags.map((tag, i) => (\n            <MiniTag\n              key={i}\n              {...(Tags.find(({ name }) => tag === name) as TagProps)}\n            />\n          ))}\n        </div>\n        <Divider className={classes.projectDivider} />\n        <Typography className={classes.projectTime} variant=\"subtitle1\">\n          {start} - {end ?? \"Present\"}\n        </Typography>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Display;\n","// React Imports\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { ProjectProps } from \"../../../Utils/interfaces\";\n\n// Material UI Imports\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport {} from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\n\n// const useStyles = makeStyles((theme) => ({}));\n\nconst Page: React.FC<ProjectProps> = ({ name }) => {\n  // const classes = useStyles();\n  return (\n    <>\n      <Helmet>\n        <title>{name} - Yash Totale</title>\n      </Helmet>\n      <h1>Bye</h1>\n    </>\n  );\n};\n\nexport default Page;\n","//React Imports\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useParams } from \"react-router-dom\";\nimport ProjectDisplay from \"../Components/Reusable/Project/Display\";\nimport ProjectPage from \"../Components/Reusable/Project/Page\";\nimport Projects from \"../Data/Projects.json\";\nimport { ProjectProps } from \"../Utils/interfaces\";\n\n//Material UI Imports\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"15px 40px\",\n    [theme.breakpoints.only(\"xs\")]: {\n      margin: \"15px 30px\",\n    },\n  },\n  col: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\ninterface Params {\n  id: string;\n}\n\nconst ProjectsPage: React.FC = () => {\n  const classes = useStyles();\n  const { id } = useParams<Params>();\n  const projectURLs = React.useMemo(\n    () => Projects.map((project) => project.url),\n    []\n  );\n  const isSizeSmall = useMediaQuery<Theme>((theme) =>\n    theme.breakpoints.down(\"sm\")\n  );\n  const half = React.useMemo(() => Math.ceil(Projects.length / 2), []);\n  const col1 = React.useMemo(\n    () => Projects.slice(0, isSizeSmall ? Projects.length : half),\n    [isSizeSmall, half]\n  );\n  const col2 = React.useMemo(() => (isSizeSmall ? [] : Projects.slice(half)), [\n    isSizeSmall,\n    half,\n  ]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Projects - Yash Totale</title>\n      </Helmet>\n      {projectURLs.includes(id) ? (\n        <ProjectPage\n          {...(Projects.find((project) => project.url === id) as ProjectProps)}\n        />\n      ) : (\n        <div className={classes.root}>\n          {[...Array(isSizeSmall ? 1 : 2)].map((x, i) => (\n            <div key={i} className={classes.col}>\n              {(i === 0 ? col1 : col2).map((props, i) => (\n                <ProjectDisplay {...props} key={i} />\n              ))}\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProjectsPage;\n","// React Imports\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Material UI Imports\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton } from \"@material-ui/core\";\nimport {} from \"@material-ui/icons\";\n\n// const useStyles = makeStyles((theme) => ({}));\n\ninterface ActionButtonProps {\n  icon: JSX.Element;\n  component: \"a\" | \"btn\" | \"link\";\n  onClick?: (e?: React.MouseEvent<HTMLButtonElement, MouseEvent>) => any;\n  href?: string;\n  to?: string;\n  className?: string;\n}\n\nconst ActionButton: React.FC<ActionButtonProps> = ({\n  component,\n  href,\n  icon,\n  onClick,\n  to,\n  className,\n}) => {\n  // const classes = useStyles();\n  switch (component) {\n    case \"a\": {\n      return (\n        <IconButton\n          component=\"a\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={href}\n          className={className}\n        >\n          {icon}\n        </IconButton>\n      );\n    }\n    case \"btn\": {\n      return (\n        <IconButton onClick={onClick} className={className}>\n          {icon}\n        </IconButton>\n      );\n    }\n    case \"link\": {\n      return (\n        <IconButton component={Link} to={`/${to}`} className={className}>\n          {icon}\n        </IconButton>\n      );\n    }\n  }\n};\n\nexport default ActionButton;\n","// React Imports\nimport React from \"react\";\nimport ActionButton from \"./ActionButton\";\n\n// Material UI Imports\nimport { Tooltip } from \"@material-ui/core\";\n\nexport interface TooltipBtnProps {\n  title: string;\n  icon: JSX.Element;\n  component: \"a\" | \"btn\" | \"link\";\n  onClick?: (e?: React.MouseEvent<HTMLButtonElement, MouseEvent>) => any;\n  href?: string;\n  to?: string;\n  className?: string;\n}\n\nconst TooltipBtn: React.FC<TooltipBtnProps> = (props) => {\n  const tooltipComponent = ActionButton(props) as React.ReactElement<any, any>;\n  const { title, className } = props;\n  return (\n    <Tooltip className={className} key={title} title={title}>\n      {tooltipComponent}\n    </Tooltip>\n  );\n};\n\nexport default TooltipBtn;\n"],"sourceRoot":""}